"use strict";(self.webpackChunkgx_blog=self.webpackChunkgx_blog||[]).push([[2680],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),p=r,f=d["".concat(c,".").concat(p)]||d[p]||g[p]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8891:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return g}});var a=n(83117),r=n(80102),o=(n(67294),n(3905)),i=["components"],s={title:"2\u3001\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",tags:["swiftUI","async"]},c=void 0,l={unversionedId:"swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",id:"swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",title:"2\u3001\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",description:"async await\u8ba9\u7f51\u7edc\u8bf7\u6c42\u53d8\u5f97\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4e0d\u7528\u518d\u4f7f\u7528\u56de\u8c03\u673a\u5236\u4e86\u3002",source:"@site/docs/swiftUI-cookbook/11-\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/02-\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3.md",sourceDirName:"swiftUI-cookbook/11-\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait",slug:"/swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",permalink:"/docs/swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",draft:!1,editUrl:"https://github.com/xing-ou/GxBlog/docs/swiftUI-cookbook/11-\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/02-\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3.md",tags:[{label:"swiftUI",permalink:"/docs/tags/swift-ui"},{label:"async",permalink:"/docs/tags/async"}],version:"current",sidebarPosition:2,frontMatter:{title:"2\u3001\u7528async\u51fd\u6570\u8bf7\u6c42\u63a5\u53e3",tags:["swiftUI","async"]},sidebar:"swiftUI-cookbook",previous:{title:"1\u3001SwiftUI\u4e2d\u4f7f\u7528async\u51fd\u6570",permalink:"/docs/swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/SwiftUI\u4e2d\u4f7f\u7528async\u51fd\u6570"},next:{title:"3\u3001\u4e0b\u62c9\u5237\u65b0",permalink:"/docs/swiftUI-cookbook/\u7b2c\u5341\u4e00\u7ae0-SwiftUI\u4e2d\u7684async\u548cawait/\u4e0b\u62c9\u5237\u65b0"}},u={},g=[{value:"Getting ready",id:"getting-ready",level:2},{value:"How to do it\u2026",id:"how-to-do-it",level:2},{value:"How it works\u2026",id:"how-it-works",level:2}],d={toc:g};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"async")," ",(0,o.kt)("strong",{parentName:"p"},"await"),"\u8ba9\u7f51\u7edc\u8bf7\u6c42\u53d8\u5f97\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u4e0d\u7528\u518d\u4f7f\u7528\u56de\u8c03\u673a\u5236\u4e86\u3002"),(0,o.kt)("h2",{id:"getting-ready"},"Getting ready"),(0,o.kt)("p",null,"\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2aApp\uff1a",(0,o.kt)("strong",{parentName:"p"},"SpamWords"),"\u3002target\u4fdd\u8bc1ios15\u4ee5\u4e0a\u3002"),(0,o.kt)("h2",{id:"how-to-do-it"},"How to do it\u2026"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u9996\u5148\uff0c\u521b\u5efa\u6211\u4eec\u7684model")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"struct Language: Decodable, Identifiable {\n    var id: String { code }\n    let code: String\n    let label: String\n}\n\nstruct LanguageList: Decodable {\n    let codeLanguages: [Language]\n}\n\nstruct SpamWords: Decodable {\n    let words: [String]\n}\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"\u521b\u5efa\u4e00\u4e2aservice\u6765\u53d1\u8d77\u8bf7\u6c42")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'struct SpamWordsLanguagesService {\n    private let decoder: JSONDecoder = {\n        let decoder = JSONDecoder()\n        decoder.keyDecodingStrategy = .convertFromSnakeCase\n        return decoder\n    }()\n    \n    private func fetch<T: Decodable>(type: T.Type, from urlString: String) async -> T? {\n        guard let url = URL(string: urlString) else { return nil }\n        do {\n            let (data, _) = try await URLSession.shared.data(from: url, delegate: nil)\n            return try decoder.decode(type, from: data)\n        } catch {\n            return nil\n        }\n    }\n    \n    func fetchLanguages() async -> [Language] {\n        await fetch(type: LanguageList.self, from: "https://www.spam-words.com/api/languages")?.codeLanguages ?? []\n    }\n    \n    func fetchWords(language: Language) async -> [String] {\n        await fetch(type: SpamWords.self, from: "https://www.spam-words.com/api/words/" + language.code)?.words ?? []\n    }\n}\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"\u521b\u5efa\u6211\u4eec\u7684language\u5217\u8868")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'struct ContentView: View {\n    let service = SpamWordsLanguagesService()\n    @State var languages: [Language] = []\n    var body: some View {\n        NavigationView {\n            List(languages) { language in\n                NavigationLink {\n                    Text(language.label)\n                } label: {\n                    Text(language.label)\n                }\n            }\n            .listStyle(.plain)\n            .navigationTitle("Languages")\n            .task {\n                languages = await service.fetchLanguages()\n            }\n        }\n    }\n}\n')),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"\u521b\u5efa\u6211\u4eec\u7684words\u5217\u8868\uff0c\u5e76\u66f4\u6362NavigationLink\u7684destination\u4e3a\u6211\u4eec\u7684word\u5217\u8868")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"struct SpamWordsView: View {\n    let language: Language\n    let service = SpamWordsLanguagesService()\n    @State var words: [String] = []\n    var body: some View {\n        List(words, id: \\.self) { word in\n            Text(word)\n        }\n        .navigationTitle(language.label)\n        .task {\n          words = await service.fetchWords(language: language)\n        }\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gygi9mpzi2g306a0ckjs8.gif",alt:"Untitled"})),(0,o.kt)("h2",{id:"how-it-works"},"How it works\u2026"),(0,o.kt)("p",null,"ios15\u5f00\u59cb\uff0cURLSession\u63d0\u4f9b\u4e86async/await\u7684\u76f8\u5173\u63a5\u53e3\u3002\u5176\u8fd4\u56de\u4e00\u4e2adata\u548chttpResponse\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"let (data, _) = try await URLSession.shared.data(from: url, delegate: nil)\n")))}p.isMDXComponent=!0}}]);