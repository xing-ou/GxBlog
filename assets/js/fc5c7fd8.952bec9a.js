"use strict";(self.webpackChunkgx_blog=self.webpackChunkgx_blog||[]).push([[2668],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=o,f=s["".concat(c,".").concat(d)]||s[d]||m[d]||l;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8560:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return s}});var r=n(3117),o=n(102),l=(n(7294),n(3905)),a=["components"],i={title:"1\u3001\u4e24\u6570\u4e4b\u548c",tags:["leetcode","algorithm"],description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/two-sum"},c=void 0,u={unversionedId:"algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c",id:"algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c",title:"1\u3001\u4e24\u6570\u4e4b\u548c",description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/two-sum",source:"@site/docs/algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c.md",sourceDirName:"algorithm/leetcode",slug:"/algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c",permalink:"/docs/algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c",editUrl:"https://github.com/xing-ou/GxBlog/docs/algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c.md",tags:[{label:"leetcode",permalink:"/docs/tags/leetcode"},{label:"algorithm",permalink:"/docs/tags/algorithm"}],version:"current",frontMatter:{title:"1\u3001\u4e24\u6570\u4e4b\u548c",tags:["leetcode","algorithm"],description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/two-sum"},sidebar:"algorithm",previous:{title:"\u5173\u4e8e\u672c\u4e13\u9898",permalink:"/docs/algorithm/\u5173\u4e8e\u672c\u4e13\u9898"},next:{title:"2\u3001\u4e24\u6570\u76f8\u52a0",permalink:"/docs/algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0"}},p=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:2},{value:"\u7b54\u6848",id:"\u7b54\u6848",children:[],level:2}],m={toc:p};function s(e){var t=e.components,n=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/two-sum"},"https://leetcode-cn.com/problems/two-sum")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target  \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002\n\n\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u5728\u7b54\u6848\u91cc\u4e0d\u80fd\u91cd\u590d\u51fa\u73b0\u3002\n\n\u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b 1\uff1a\n\n\u8f93\u5165\uff1anums = [2,7,11,15], target = 9\n\u8f93\u51fa\uff1a[0,1]\n\u89e3\u91ca\uff1a\u56e0\u4e3a nums[0] + nums[1] == 9 \uff0c\u8fd4\u56de [0, 1] \u3002\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b 2\uff1a\n\n\u8f93\u5165\uff1anums = [3,2,4], target = 6\n\u8f93\u51fa\uff1a[1,2]\n\u793a\u4f8b 3\uff1a\n\n\u8f93\u5165\uff1anums = [3,3], target = 6\n\u8f93\u51fa\uff1a[0,1]\n")),(0,l.kt)("p",null,"\u63d0\u793a\uff1a"),(0,l.kt)("p",null,"2 <= nums.length <= 104\n-109 <= nums","[i]"," <= 109\n-109 <= target <= 109\n\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u6709\u6548\u7b54\u6848\n\u8fdb\u9636\uff1a\u4f60\u53ef\u4ee5\u60f3\u51fa\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8e O(n2) \u7684\u7b97\u6cd5\u5417\uff1f"),(0,l.kt)("h2",{id:"\u7b54\u6848"},"\u7b54\u6848"),(0,l.kt)("p",null,"\u904d\u5386\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u5df2\u904d\u5386\u7684\u4fe1\u606f\u5b58\u50a8\u8d77\u6765\uff0ckey\u4e3a\u503c\uff0cvalue\u4e3aindex\u3002\u8fd9\u6837\u5728\u904d\u5386\u4e0b\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u5c31\u80fd\u901a\u8fc7key\uff0c\u5224\u65ad\u51fa\u662f\u5426\u6ee1\u8db3\u8981\u6c42\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift",metastring:'title="Solution.swift"',title:'"Solution.swift"'},"class Solution {\n   func twoSum(_ nums: [Int], _ target: Int) -> [Int] {\n        let count = nums.count\n        var final = [Int]()\n        var map = [Int: Int].init(minimumCapacity: count) \n        let _ = nums.enumerated().first { (index, value) in\n            let targetValue = target - value\n            if let value = map[targetValue] {\n                final = [value, index]\n                return true\n            } else {\n                map[value] = index\n                return false\n            }\n        }\n        return final\n    }\n}\n")),(0,l.kt)("p",null,"\u6700\u4f73\u7684\u60c5\u51b5\u662f, \u4e0d\u77e5\u905399%\u4ee5\u4e0a\u7684\u662f\u600e\u4e48\u505a\u7684\ud83d\ude02"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"\u6267\u884c\u7528\u65f6\uff1a\n44 ms , \u5728\u6240\u6709 Swift \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8698.83%\u7684\u7528\u6237\n\u5185\u5b58\u6d88\u8017\uff1a13.7 MB, \u5728\u6240\u6709 Swift \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8694.88%\u7684\u7528\u6237\n\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b\uff1a\n56 / 56\n")))}s.isMDXComponent=!0}}]);