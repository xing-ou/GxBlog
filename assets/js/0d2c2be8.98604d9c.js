"use strict";(self.webpackChunkgx_blog=self.webpackChunkgx_blog||[]).push([[726],{372:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var l=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],r={title:"2\u3001\u4e24\u6570\u76f8\u52a0",date:new Date("2021-11-01T00:00:00.000Z"),tags:["leetcode","algorithm"],description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/add-two-numbers"},d=void 0,s={unversionedId:"algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index",id:"algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index",isDocsHomePage:!1,title:"2\u3001\u4e24\u6570\u76f8\u52a0",description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/add-two-numbers",source:"@site/docs/algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index.md",sourceDirName:"algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0",slug:"/algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index",permalink:"/docs/algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index",editUrl:"https://github.com/xing-ou/GxBlog/docs/algorithm/leetcode/01-2-\u4e24\u6570\u76f8\u52a0/index.md",tags:[{label:"leetcode",permalink:"/docs/tags/leetcode"},{label:"algorithm",permalink:"/docs/tags/algorithm"}],version:"current",frontMatter:{title:"2\u3001\u4e24\u6570\u76f8\u52a0",date:"2021-11-01T00:00:00.000Z",tags:["leetcode","algorithm"],description:"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/add-two-numbers"},sidebar:"algorithm",previous:{title:"1\u3001\u4e24\u6570\u4e4b\u548c",permalink:"/docs/algorithm/leetcode/00-1-\u4e24\u6570\u4e4b\u548c"}},c=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[],level:3},{value:"\u7b54\u6848",id:"\u7b54\u6848",children:[],level:3}],u={toc:c};function p(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,l.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,i.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/add-two-numbers"},"https://leetcode-cn.com/problems/add-two-numbers")),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e24\u4e2a \u975e\u7a7a \u7684\u94fe\u8868\uff0c\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5b83\u4eec\u6bcf\u4f4d\u6570\u5b57\u90fd\u662f\u6309\u7167 \u9006\u5e8f \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \u4e00\u4f4d \u6570\u5b57\u3002"),(0,i.kt)("p",null,"\u8bf7\u4f60\u5c06\u4e24\u4e2a\u6570\u76f8\u52a0\uff0c\u5e76\u4ee5\u76f8\u540c\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u548c\u7684\u94fe\u8868\u3002"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0 \u5f00\u5934\u3002"),(0,i.kt)("p",null,"\u793a\u4f8b 1\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:n(8890).Z})),(0,i.kt)("p",null,"\u8f93\u5165\uff1al1 = ","[2,4,3]",", l2 = ","[5,6,4]","\n\u8f93\u51fa\uff1a","[7,0,8]","\n\u89e3\u91ca\uff1a342 + 465 = 807.\n\u793a\u4f8b 2\uff1a"),(0,i.kt)("p",null,"\u8f93\u5165\uff1al1 = ","[0]",", l2 = ","[0]","\n\u8f93\u51fa\uff1a","[0]","\n\u793a\u4f8b 3\uff1a"),(0,i.kt)("p",null,"\u8f93\u5165\uff1al1 = ","[9,9,9,9,9,9,9]",", l2 = ","[9,9,9,9]","\n\u8f93\u51fa\uff1a","[8,9,9,9,0,0,0,1]"),(0,i.kt)("p",null,"\u63d0\u793a\uff1a"),(0,i.kt)("p",null,"\u6bcf\u4e2a\u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u5728\u8303\u56f4 ","[1, 100]"," \u5185\n0 <= Node.val <= 9\n\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u5217\u8868\u8868\u793a\u7684\u6570\u5b57\u4e0d\u542b\u524d\u5bfc\u96f6"),(0,i.kt)("h3",{id:"\u7b54\u6848"},"\u7b54\u6848"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift",metastring:'title="Solution.swift"',title:'"Solution.swift"'},"public class ListNode {\n     public var val: Int\n     public var next: ListNode?\n     public init() { self.val = 0; self.next = nil; }\n     public init(_ val: Int) { self.val = val; self.next = nil; }\n     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n}\n\nclass Solution {\n    func addTwoNumbers(_ l1: ListNode?, _ l2: ListNode?) -> ListNode? {\n        //\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u4e3a0\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u6570\u5b57\n        if l1?.val == 0 && l1?.next == nil { return l2 }\n        if l2?.val == 0 && l2?.next == nil { return l1 }\n        \n        //\u521d\u59cb\u5316\n        let head: ListNode = ListNode()\n        var tail: ListNode = head\n        var carry = 0//\u8fdb\u4f4d\n        var p1 = l1\n        var p2 = l2\n        //\u904d\u5386\n        while(p1 != nil || p2 != nil || carry > 0) {\n            let value1 = p1?.val ?? 0\n            let value2 = p2?.val ?? 0\n            let sum = value1 + value2 + carry\n            let node = p1 ?? p2 ?? ListNode()//\u590d\u7528\u5df2\u6709\u8282\u70b9\n            node.val = sum % 10//\u8d4b\u503c\n            tail.next = node //\u6dfb\u52a0\u8282\u70b9\u5230\u5c3e\u90e8\n            tail = node //\u79fb\u52a8\u5c3e\u6307\u9488\n                        \n            carry = sum / 10 //\u8ba1\u7b97\u8fdb\u4f4d\n            p1 = p1?.next //\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\n            p2 = p2?.next //\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\n        }\n        return head.next\n    }\n}\n")))}p.isMDXComponent=!0},8890:function(e,t,n){t.Z=n.p+"assets/images/15B646FC-370D-42C5-BD58-2E18C5A196C2-5cb8f57f404364c6c0440fe6170f2c43.png"}}]);