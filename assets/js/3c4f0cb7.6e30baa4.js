"use strict";(self.webpackChunkgx_blog=self.webpackChunkgx_blog||[]).push([[4060],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),m=a,d=f["".concat(s,".").concat(m)]||f[m]||p[m]||o;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},84193:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],l={title:"11\u3001\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",tags:["swiftUI"]},s=void 0,c={unversionedId:"swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",id:"swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",title:"11\u3001\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",description:"\u8fd8\u8bb0\u5f97\u5404\u79cd\u76f4\u64ad\u95f4\u4e2d\u7684\u5e95\u90e8\u4e0d\u65ad\u98d8\u8d77\u5404\u79cd\u989c\u8272\u7684\u5c0f\u7ea2\u5fc3\u4e48\uff1f",source:"@site/docs/swiftUI-cookbook/08-\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/11-\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b.md",sourceDirName:"swiftUI-cookbook/08-\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b",slug:"/swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",permalink:"/docs/swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",draft:!1,editUrl:"https://github.com/xing-ou/GxBlog/docs/swiftUI-cookbook/08-\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/11-\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b.md",tags:[{label:"swiftUI",permalink:"/docs/tags/swift-ui"}],version:"current",sidebarPosition:11,frontMatter:{title:"11\u3001\u5b9e\u73b0\u70b9\u8d5e\u52a8\u753b",tags:["swiftUI"]},sidebar:"swiftUI-cookbook",previous:{title:"10\u3001\u521b\u5efa\u4e00\u4e2a\u5f39\u6027Header",permalink:"/docs/swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u521b\u5efa\u4e00\u4e2a\u5f39\u6027Header"},next:{title:"12\u3001\u521b\u5efa\u4e00\u4e2acard-stack",permalink:"/docs/swiftUI-cookbook/\u7b2c\u516b\u7ae0-SwiftUI\u7684\u52a8\u753b/\u521b\u5efa\u4e00\u4e2acard-stack"}},u={},p=[{value:"Getting ready",id:"getting-ready",level:2},{value:"How to do it\u2026",id:"how-to-do-it",level:2},{value:"How it works\u2026",id:"how-it-works",level:2}],f={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u8fd8\u8bb0\u5f97\u5404\u79cd\u76f4\u64ad\u95f4\u4e2d\u7684\u5e95\u90e8\u4e0d\u65ad\u98d8\u8d77\u5404\u79cd\u989c\u8272\u7684\u5c0f\u7ea2\u5fc3\u4e48\uff1f"),(0,o.kt)("p",null,"\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u8fd9\u79cd\u6548\u679c\u3002"),(0,o.kt)("h2",{id:"getting-ready"},"Getting ready"),(0,o.kt)("p",null,"\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a",(0,o.kt)("strong",{parentName:"p"},"FloatingHearts")),(0,o.kt)("p",null,'\u5f15\u5165\u4e09\u65b9\u5e93\uff1apod "SwiftCubicSpline"\uff0c\u6765\u5b9e\u73b0\u5c0f\u7ea2\u5fc3\u6f02\u79fb\u8def\u5f84\u3002'),(0,o.kt)("h2",{id:"how-to-do-it"},"How to do it\u2026"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u9996\u5148\uff0c\u5b9e\u73b0\u6211\u4eec\u7684\u52a8\u6548")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"import SwiftCubicSpline\n\nstruct MoveShakeScale: GeometryEffect {\n    private(set) var pct: CGFloat\n    private let xPosition = UIScreen.main.bounds.width/4 + CGFloat.random(in: -20..<20)\n    private let scaleSpline = CubicSpline(points: [\n        Point(x: 0, y: 0.0),\n        Point(x: 0.3, y: 3.5),\n        Point(x: 0.4, y: 3.1),\n        Point(x: 1.0, y: 2.1),\n    ])\n\n    private let xSpline = CubicSpline(points: [\n        Point(x: 0.0,  y: 0.0),\n        Point(x: 0.15, y: 20.0),\n        Point(x: 0.3,  y: 12),\n        Point(x: 0.5,  y: 0),\n        Point(x: 1.0,  y: 8),\n    ])\n\n    var animatableData: CGFloat {\n        get { pct }\n        set { pct = newValue }\n    }\n    \n    func effectValue(size: CGSize) -> ProjectionTransform {\n        let scale = scaleSpline[x: Double(pct)]\n        let xOffset = xSpline[x: Double(pct)]\n        let yOffset = UIScreen.main.bounds.height/2 - pct * UIScreen.main.bounds.height/4*3\n        let transTrasf = CGAffineTransform(translationX: xPosition + CGFloat(xOffset), y: yOffset)\n        let scaleTrasf = CGAffineTransform(scaleX: CGFloat(scale), y: CGFloat(scale))\n        return ProjectionTransform(scaleTrasf.concatenating(transTrasf))\n    }\n}\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u6211\u4eec\u7684\u6843\u5fc3View")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'\nextension Color {\n    init(r: Double, g: Double, b: Double) {\n      self.init(red: r/255, green: g/255, blue: b/255)\n    }\n    static func random() -> Color {\n        Color(r: .random(in: 100...144),\n              g: .random(in: 10...200),\n              b: .random(in: 200...244))\n    }\n}\n@available(iOS 15.0, *)\nstruct Heart: View, Identifiable {\n    let id = UUID()\n    @State private var opacity = 1.0\n    @State private var scale: CGFloat = 1.0\n    @State private var toAnimate = false\n    var body: some View {\n        Image(systemName: "heart.fill")\n            .foregroundColor(.random())\n            .opacity(opacity)\n            .modifier(MoveShakeScale(pct: toAnimate ? 1 : 0))\n            .animation(Animation.easeIn(duration:5.0), value: toAnimate)\n            .task {\n                toAnimate.toggle()\n                withAnimation(.easeIn(duration: 5)) {\n                    opacity = 0\n                }\n            }\n    }\n}\n@available(iOS 15.0, *)\nextension Heart: Equatable {\n    static func == (lhs: Heart, rhs: Heart) -> Bool {\n        lhs.id == rhs.id\n    }\n}\nextension Array where Element: Equatable {\n    mutating func remove(object: Element) {\n        guard let index = firstIndex(of: object) else { return }\n        remove(at: index)\n    }\n\n}\n@available(iOS 15.0, *)\nclass Hearts: ObservableObject {\n    @Published\n    private(set) var all: [Heart] = []\n\n    func new() {\n        let heart = Heart()\n        all.append(heart)\n        DispatchQueue.main.asyncAfter(deadline: .now() + 10.0) {\n            self.all.remove(object: heart)\n        }\n    }\n}\n@available(iOS 15.0, *)\nstruct HeartsView: View {\n    @ObservedObject\n    var hearts: Hearts\n    var body: some View {\n        ForEach(hearts.all) { $0 }\n    }\n}\n\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"\u6dfb\u52a0\u5230ContentView\u4e2d")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'struct ContentView: View {\n    var hearts = Hearts()\n    var body: some View {\n        VStack {\n            Spacer()\n            HStack {\n                Button {\n                    hearts.new()\n                } label: {\n                    Image(systemName: "heart")\n                        .font(.title)\n                        .frame(width: 80, height: 80)\n                        .foregroundColor(.white)\n                        .background(.blue)\n                        .clipShape(Circle())\n                        .shadow(radius: 10)\n                    }\n                    Spacer()\n                }.padding(.horizontal, 30)\n            }\n            .overlay(HeartsView(hearts: hearts))\n        }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gy9wq95jpzj30b40o2q34.jpg",alt:"kdkd"})),(0,o.kt)("h2",{id:"how-it-works"},"How it works\u2026"),(0,o.kt)("p",null,"\u57fa\u672c\u601d\u60f3\u662f\u8ba9\u56db\u4e2a\u52a8\u753b\u5e76\u884c\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u4ece\u5e95\u90e8\u79fb\u52a8\u5230\u9876\u90e8"),(0,o.kt)("li",{parentName:"ul"},"\u53d8\u6de1"),(0,o.kt)("li",{parentName:"ul"},"\u653e\u5927\u548c\u7f29\u5c0f"),(0,o.kt)("li",{parentName:"ul"},"\u5411\u4e0a\u79fb\u52a8\u65f6\u8f7b\u5fae\u6643\u52a8")),(0,o.kt)("p",null,"\u6c34\u5e73\u8fd0\u52a8\u7684\u66f2\u7ebf\u662f\u4e00\u79cd\u952f\u9f7f\u5f62\uff0c\u6211\u4eec\u4f7f\u7528",(0,o.kt)("strong",{parentName:"p"},"SwiftCubicSpline"),"\u5e93\u6765\u8fdb\u884c\u63d2\u503c\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gy9x5qfawzj31ia0emgm3.jpg",alt:"image-20220111184118149"})),(0,o.kt)("p",null,"GeometryEffect\u8fd4\u56de\u4e00\u7cfb\u5217\u7684transformation\u5e94\u7528\u5230View\u4e0a\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u65f6\u95f4\u4f5c\u4e3a\u52a8\u753b\u5c5e\u6027\uff0c\u8ba1\u7b97\u51fa\u79fb\u52a8\u548c\u7f29\u653e\u7684\u503c\uff0c\u628a\u8fd9\u4e24\u4e2a\u4f5c\u4e3a\u4e00\u4e2atransform\u5e94\u7528\u5230View\u4e0a\u3002"),(0,o.kt)("p",null,"\u900f\u660e\u5ea6\u7684\u53d8\u5316\u662f\u7ebf\u6027\u7684\uff0c\u4e0d\u80fd\u662f\u66f2\u7ebf\uff0c\u6240\u4ee5\u5355\u72ec\u5904\u7406\u3002"),(0,o.kt)("p",null,"\u52a8\u753b\u7ed3\u675f\u540e\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u56de\u8c03\u4f9b\u6211\u4eec\u8c03\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528DispatchQueue.main.asyncAfter\u6765\u79fb\u9664"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"DispatchQueue.main.asyncAfter(deadline: .now() + 10.0) {\n    self.all.remove(object: heart)\n}\n")))}m.isMDXComponent=!0}}]);