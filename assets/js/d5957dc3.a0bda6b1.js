"use strict";(self.webpackChunkgx_blog=self.webpackChunkgx_blog||[]).push([[2528],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),c=i,g=m["".concat(s,".").concat(c)]||m[c]||d[c]||r;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},176:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return p},toc:function(){return d},default:function(){return c}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),l=["components"],o={title:"SwiftUI\u4e13\u8f91002-\u5904\u7406\u6587\u672c",tags:["swiftUI"]},s=void 0,u={permalink:"/2021/11/05/SwiftUI\u4e13\u8f91-002-\u5904\u7406\u6587\u672c",editUrl:"https://github.com/xing-ou/GxBlog/blog/2021-11-05-SwiftUI\u4e13\u8f91-002-\u5904\u7406\u6587\u672c/index.md",source:"@site/blog/2021-11-05-SwiftUI\u4e13\u8f91-002-\u5904\u7406\u6587\u672c/index.md",title:"SwiftUI\u4e13\u8f91002-\u5904\u7406\u6587\u672c",description:"headerimg",date:"2021-11-05T00:00:00.000Z",formattedDate:"2021\u5e7411\u67085\u65e5",tags:[{label:"swiftUI",permalink:"/tags/swift-ui"}],readingTime:8.7,truncated:!0,authors:[],prevItem:{title:"SwiftUI\u4e13\u8f91003-\u4f7f\u7528Image",permalink:"/2021/11/06/SwiftUI\u4e13\u8f91-003-\u4f7f\u7528Image"},nextItem:{title:"SwiftUI\u4e13\u8f91001-layout\u76f8\u5173\u63a7\u4ef6",permalink:"/2021/11/04/SwiftUI\u4e13\u8f91-001-layout\u76f8\u5173\u63a7\u4ef6"}},p={authorsImageUrls:[]},d=[{value:"\u51c6\u5907",id:"\u51c6\u5907",children:[],level:2},{value:"\u600e\u4e48\u505a\u2026",id:"\u600e\u4e48\u505a",children:[],level:2},{value:"How it works\u2026",id:"how-it-works",children:[],level:2},{value:"There&#39;s more\u2026",id:"theres-more",children:[],level:2},{value:"\u8be6\u7ec6\u4ecb\u7ecd",id:"\u8be6\u7ec6\u4ecb\u7ecd",children:[{value:"Text",id:"text",children:[{value:"Creating a Text View from a String",id:"creating-a-text-view-from-a-string",children:[],level:4},{value:"Creating a Text View for a Date",id:"creating-a-text-view-for-a-date",children:[],level:4},{value:"Creating a Text View with Formatting",id:"creating-a-text-view-with-formatting",children:[],level:4},{value:"Creating a Text View from an Image",id:"creating-a-text-view-from-an-image",children:[],level:4},{value:"Choosing a Font",id:"choosing-a-font",children:[],level:4},{value:"Styling the View\u2019s Text",id:"styling-the-views-text",children:[],level:4},{value:"Fitting Text into Available Space",id:"fitting-text-into-available-space",children:[],level:4},{value:"Handling Multiline Text",id:"handling-multiline-text",children:[],level:4},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",children:[],level:4}],level:3},{value:"TextField",id:"textfield",children:[{value:"Creating a Text Field with a String Value",id:"creating-a-text-field-with-a-string-value",children:[],level:4},{value:"Creating a Text Field with an Arbitrary Value",id:"creating-a-text-field-with-an-arbitrary-value",children:[],level:4},{value:"Creating a Text Field with an Arbitrary Optional",id:"creating-a-text-field-with-an-arbitrary-optional",children:[],level:4},{value:"Styling Text Fields",id:"styling-text-fields",children:[],level:4},{value:"\u5e38\u7528\u7684UITextFieldDelegate\u5bf9\u6bd4",id:"\u5e38\u7528\u7684uitextfielddelegate\u5bf9\u6bd4",children:[],level:4}],level:3},{value:"SecureField",id:"securefield",children:[{value:"Creating a Secure Text Field",id:"creating-a-secure-text-field",children:[],level:4},{value:"Configuring Text Entry",id:"configuring-text-entry",children:[],level:4}],level:3},{value:"TextEditor",id:"texteditor",children:[{value:"Creating a Text Editor",id:"creating-a-text-editor",children:[],level:4},{value:"Styling the View\u2019s Text",id:"styling-the-views-text-1",children:[],level:4},{value:"Managing Text Entry",id:"managing-text-entry",children:[],level:4}],level:3}],level:2}],m={toc:d};function c(e){var t=e.components,o=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"headerimg",src:n(654).Z}),"\n\u6587\u672c\u662f\u4efb\u4f55App\u7684\u4e00\u4e2a\u57fa\u7840\u3002\n\u672c\u7ae0\u6211\u4eec\u5c06\u4ecb\u7ecd\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Text")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TextField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SecureField")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TextEditor"))),(0,r.kt)("h2",{id:"\u51c6\u5907"},"\u51c6\u5907"),(0,r.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a",(0,r.kt)("strong",{parentName:"p"},"FormattedText"),"\u7684\u65b0 SwiftUI \u9879\u76ee\u3002"),(0,r.kt)("h2",{id:"\u600e\u4e48\u505a"},"\u600e\u4e48\u505a\u2026"),(0,r.kt)("p",null,"\u9996\u5148\u5c06Text\u7528VStack\u5305\u88f9\u4e00\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'struct ContentView: View {\nvar body: some View {\n        VStack{\n            Text("Hello World")\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u7136\u540e\u6dfb\u52a0\u4e00\u4e2afontWeight modifier\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'Text("Hello World").fontWeight(.medium)\n')),(0,r.kt)("p",null,"\u6dfb\u52a0\u4e24\u4e2a\u4e2astate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'@State var password = ""\n@State var someText = ""\n')),(0,r.kt)("p",null,"\u6dfb\u52a0\u4e00\u4e2aText\u548cSecureField, \u7528Text\u663e\u793aSecureField\u7684\u8f93\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'SecureField("Enter a password", text: $password).padding()\nText("password entered: \\(password)").italic()\n')),(0,r.kt)("p",null,"\u6dfb\u52a0\u4e00\u4e2aText\u548cTextField\uff0c\u7528Text\u663e\u793aTextField\u7684\u8f93\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'TextField("Enter some text", text: $someText).padding()\nText("\\(someText)").font(.largeTitle).underline()\n')),(0,r.kt)("p",null,"\u518d\u5c1d\u8bd5\u4e00\u4e0b\u5176\u4ed6modifier"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'Text("Changing text color and make it bold").foregroundColor(Color.blue).bold()\nText("Use kerning to change space between lines of text").kerning(7)\nText("Changing baseline offset").baselineOffset(100)\nText("Strikethrough").strikethrough()\nText("This is a multiline text implemented in SwiftUI. The trailing modifier was added to the text. This text also implements multiple modifiers")\n    .background(Color.yellow)\n    .multilineTextAlignment(.trailing)\n    .lineSpacing(10)\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNly1gxj3txyjzfj30cu0qgjsg.jpg",alt:"image-20211219140147411"})),(0,r.kt)("h2",{id:"how-it-works"},"How it works\u2026"),(0,r.kt)("p",null,"Text\u6709\u5173\u4e8efont\uff0cspacing\u7b49\u76f8\u5173\u7684Modifier\u3002TextFiled\u548cSecureField\u90fd\u9700\u8981\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"State"),"\u6765\u5b58\u50a8\u8f93\u5165\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"@State"),"\u6765\u58f0\u660e\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"State"),"\u3002SwiftUI\u4f1a\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"State"),"\u6539\u53d8\u65f6\uff0c\u81ea\u52a8\u5237\u65b0UI\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u901a\u8fc7$\u6765\u7ed1\u5b9a",(0,r.kt)("inlineCode",{parentName:"p"},"State"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'  TextField("Enter some text", text: $someText)     \n')),(0,r.kt)("h2",{id:"theres-more"},"There's more\u2026"),(0,r.kt)("p",null,"\u6211\u4eec\u7ee7\u7eed\u6dfb\u52a0Text\uff0c\u5f53\u5b50\u89c6\u56fe\u8d85\u8fc710\u4e2a\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519\u3002\u539f\u6765\u662fSwiftUI\u53ea\u652f\u6301\u6700\u592710\u4e2a\u5b50\u89c6\u56fe\u3002\u6240\u4ee5\u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"Group"),"\u6765\u5206\u5272\u6211\u4eec\u7684\u5b50\u89c6\u56fe\u3002"),(0,r.kt)("h2",{id:"\u8be6\u7ec6\u4ecb\u7ecd"},"\u8be6\u7ec6\u4ecb\u7ecd"),(0,r.kt)("h3",{id:"text"},"Text"),(0,r.kt)("p",null,"\u7528\u4e8e\u663e\u793a1\u884c\u6216\u8005\u591a\u884c\u7684\u53ea\u8bfb\u6587\u672c\u3002"),(0,r.kt)("h4",{id:"creating-a-text-view-from-a-string"},"Creating a Text View from a String"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"//\u56fd\u9645\u5316\ninit(_ key: LocalizedStringKey, tableName: String? = nil, bundle: Bundle? = nil, comment: StaticString? = nil)\n//\u666e\u901a\u5b57\u7b26\u4e32\uff0c\u65e0\u56fd\u9645\u5316\ninit<S>(_ content: S) where S : StringProtocol\n//\u5bcc\u6587\u672c\ninit(_ attributedContent: AttributedString)\n")),(0,r.kt)("h4",{id:"creating-a-text-view-for-a-date"},"Creating a Text View for a Date"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// \u663e\u793a\u67d0\u4e2a\u65f6\u95f4\u8303\u56f43:09-3.10 PM\ninit(_ dates: ClosedRange<Date>)\ninit(_ interval: DateInterval)\n// \u663e\u793a\u65e5\u671f, \u6309\u7167style\ninit(_ date: Date, style: Text.DateStyle)\n")),(0,r.kt)("h4",{id:"creating-a-text-view-with-formatting"},"Creating a Text View with Formatting"),(0,r.kt)("p",null,"\u663e\u793a\u975estring\u5bf9\u8c61, \u9700\u8981\u4f60\u7684type\u9075\u5faaFormatStyle\u534f\u8bae\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init<F>(_ input: F.FormatInput, format: F) where F : FormatStyle, F.FormatInput : Equatable, F.FormatOutput == String\ninit<Subject>(_ subject: Subject, formatter: Formatter) where Subject : ReferenceConvertible\ninit<Subject>(_ subject: Subject, formatter: Formatter) where Subject : NSObject\n")),(0,r.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684formater\u3002\u6bd4\u5982\u6211\u4eec\u8981\u683c\u5f0f\u5316\u65e5\u671f\u4e3ayyyy-MM-dd\u3002\u4f46\u9ed8\u8ba4Date.FormatStyle\u63d0\u4f9b\u7684\u4f3c\u4e4e\u4e0d\u591f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684formater\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'struct YYYYMMddDateStyle: FormatStyle {\n    typealias FormatInput = Date\n    typealias FormatOutput = String\n    \n    static let dateFormater: DateFormatter = {\n        let formater = DateFormatter()\n        formater.dateFormat = "yyyy-MM-dd"\n        return formater\n    }()\n    func format(_ value: Date) -> String {\n        return YYYYMMddDateStyle.dateFormater.string(from: value)\n    }\n}\n/// \u6269\u5c55\u4e00\u4e0bFormatStyle\uff0c\u8fd9\u6837\u5c31\u6709\u63d0\u793a\u4e86\nextension FormatStyle where Self == YYYYMMddDateStyle {\n    static var yyyyMMddDateStyle:YYYYMMddDateStyle { return .init() }\n}\n\n//\u4f7f\u7528\nstruct ContentView: View {\n    var body: some View {\n        Text.init(Date(), format: .yyyyMMddDateStyle)\n    }\n}\n')),(0,r.kt)("h4",{id:"creating-a-text-view-from-an-image"},"Creating a Text View from an Image"),(0,r.kt)("p",null,"\u5c06\u56fe\u7247\u5305\u88f9\u4e3aText\uff0c\u9002\u5408\u548c\u5176\u4ed6Text\u62fc\u63a5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init(_ image: Image)\n")),(0,r.kt)("p",null,"\u4f8b\u5b50:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'struct ContentView: View {\n    @State var password = ""\n    @State var someText = "Initial text"\n    var body: some View {\n            Text("hello") + Text(Image("my-img-name")) + Text("world")\n    }\n}            \n')),(0,r.kt)("h4",{id:"choosing-a-font"},"Choosing a Font"),(0,r.kt)("p",null,"\u5b57\u4f53\u76f8\u5173\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func font(Font?) -> Text\nfunc fontWeight(Font.Weight?) -> Text\n")),(0,r.kt)("h4",{id:"styling-the-views-text"},"Styling the View\u2019s Text"),(0,r.kt)("p",null,"\u6587\u672c\u6837\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func foregroundColor(Color?) -> Text\nfunc bold() -> Text\nfunc italic() -> Text\nfunc strikethrough(Bool, color: Color?) -> Text\nfunc underline(Bool, color: Color?) -> Text\nfunc monospacedDigit() -> Text\nfunc kerning(CGFloat) -> Text\nfunc tracking(CGFloat) -> Text\nfunc baselineOffset(CGFloat) -> Text\nfunc textCase(Text.Case?) -> some View\n")),(0,r.kt)("h4",{id:"fitting-text-into-available-space"},"Fitting Text into Available Space"),(0,r.kt)("p",null,"\u7f29\u653e\u76f8\u5173:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func allowsTightening(Bool) -> some View//\u662f\u5426\u5141\u8bb8\u7f29\u653e\u4e24\u4e2a\u5b57\u7b26\u95f4\u7684\u95f4\u8ddd\nfunc minimumScaleFactor(CGFloat) -> some View//\u7f29\u653e\u5b57\u4f53\nfunc truncationMode(Text.TruncationMode) -> some View//\u622a\u65ad\n")),(0,r.kt)("h4",{id:"handling-multiline-text"},"Handling Multiline Text"),(0,r.kt)("p",null,"\u5904\u7406\u591a\u884c\u6587\u672c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func lineLimit(Int?) -> some View\nfunc lineSpacing(CGFloat) -> some View\nfunc multilineTextAlignment(TextAlignment) -> some View\n")),(0,r.kt)("h4",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,r.kt)("p",null,"\u8fd8\u6709\u4e9bvoiceover\u548caccessbility\u76f8\u5173\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u6682\u65f6\u5ffd\u7565"),(0,r.kt)("h3",{id:"textfield"},"TextField"),(0,r.kt)("p",null,"\u8f93\u5165\u6846\u3002"),(0,r.kt)("h4",{id:"creating-a-text-field-with-a-string-value"},"Creating a Text Field with a String Value"),(0,r.kt)("p",null,"textfield\u548cstring\u7ed1\u5b9a\u3002\u9700\u89813\u4e2a\u4e1c\u897f\uff1a title, binding\u548cprompt\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init(_ titleKey: LocalizedStringKey, text: Binding<String>, prompt: Text?)\ninit<S>(_ title: S, text: Binding<String>, prompt: Text?) where S : StringProtocol\ninit(text: Binding<String>, prompt: Text? = nil, label: () -> Label)\n")),(0,r.kt)("p",null,"\u6ce8\u610ftitle\u548cprompt\u7684\u533a\u522b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'Form {\n    TextField(text: $username, prompt: Text("Required")) {\n        Text("Username")\n    }\n    SecureField(text: $password, prompt: Text("Required")) {\n        Text("Password")\n    }\n}\n')),(0,r.kt)("p",null,"\u5728macOS\u4e0a\uff1a\u524d\u9762\u7684\u6587\u5b57\u662ftitle/label\u3002placeholder\u662fprompt\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNly1gxj9ltz1ppj30qi05m74e.jpg",alt:"image-20211219172142715"})),(0,r.kt)("p",null,"\u5728ios\u4e0a\uff0c\u4e0d\u4f1a\u5355\u72ec\u663e\u793alabel\uff0c\u5982\u679c\u63d0\u4f9b\u4e86prompt\uff0c\u5219\u7528prompt\u4f5c\u4e3aplaceholder\uff0c\u6ca1\u6709\u63d0\u4f9b\u5219\u7528title/label\u4f5c\u4e3aplaceholder\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNly1gxj9nghei6j30og094q2x.jpg",alt:"image-20211219172316635"})),(0,r.kt)("h4",{id:"creating-a-text-field-with-an-arbitrary-value"},"Creating a Text Field with an Arbitrary Value"),(0,r.kt)("p",null,"TextField\u5e76\u4e0d\u4e00\u5b9a\u53ea\u80fdbinding\u5230String\uff0c\u53ef\u4ee5Binding\u5230\u4efb\u4f55\u7c7b\u578b\uff0c\u53ea\u662f\u9700\u8981\u4e00\u4e2aParseableFormatStyle \u6216\u8005 Formatter\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init<F>(_ titleKey: LocalizedStringKey, value: Binding<F.FormatInput>, format: F, prompt: Text? = nil) where F : ParseableFormatStyle, F.FormatOutput == String\ninit<S, F>(_ title: S, value: Binding<F.FormatInput>, format: F, prompt: Text? = nil) where S : StringProtocol, F : ParseableFormatStyle, F.FormatOutput == String\ninit<F>(value: Binding<F.FormatInput>, format: F, prompt: Text? = nil, label: () -> Label) where F : ParseableFormatStyle, F.FormatOutput == String\ninit<V>(_ titleKey: LocalizedStringKey, value: Binding<V>, formatter: Formatter, prompt: Text?)\ninit<S, V>(_ title: S, value: Binding<V>, formatter: Formatter, prompt: Text?) where S : StringProtocol\ninit<V>(value: Binding<V>, formatter: Formatter, prompt: Text? = nil, label: () -> Label)\n")),(0,r.kt)("p",null,"\u6211\u4eec\u6765\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c06\u4e00\u4e2aPerson\u7ed1\u5b9a\u5230TextField\u3002TextField\u663e\u793a",(0,r.kt)("inlineCode",{parentName:"p"},"firstName lastName"),"\u3002"),(0,r.kt)("p",null,"\u5148\u5b9a\u4e49Person"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'struct Person {\n    var firstName = ""\n    var lastName = ""\n}\n')),(0,r.kt)("p",null,"\u5b9a\u4e49\u89e3\u6790\u7b56\u7565\uff0c\u8d1f\u8d23\u5c06String\u89e3\u6790\u6210Person"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'/// \u89e3\u6790\uff0c\u8d1f\u8d23\u5c06string\u89e3\u6790\u6210\u81ea\u5b9a\u4e49\u7c7b\u578b\nstruct PersonParseStrategy: ParseStrategy {\n    typealias ParseInput = String\n    typealias ParseOutput = Person\n    func parse(_ value: String) throws -> Person {\n        var components = value.components(separatedBy: " ")\n        if components.isEmpty {\n            return Person()\n        } else if components.count == 1 {\n            return Person(firstName: components[0], lastName: "")\n        } else {\n            let firstName = components[0]\n            components.removeFirst()\n            let lastName = components.joined(separator: " ")\n            return Person(firstName: firstName, lastName: lastName)\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u5b9a\u4e49FormatStyle\uff0c\u8d1f\u8d23\u5c06Person\u683c\u5f0f\u5316\u4e3aString"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'/// formater, \u8d1f\u8d23\u5c06\u81ea\u5b9a\u4e49\u7c7b\u578b\u89e3\u6790\u6210textfield\u7684\u663e\u793a\nstruct PersonNameFormatStyle: ParseableFormatStyle {\n    typealias Strategy = PersonParseStrategy\n    typealias FormatInput = Person\n    typealias FormatOutput = String\n    var parseStrategy = PersonParseStrategy()\n    func format(_ value: Person) -> String {\n        return "\\(value.firstName) \\(value.lastName)"\n    }\n}\n@available(iOS 15.0, *)\nextension ParseableFormatStyle where Self == PersonNameFormatStyle {\n    static var personNameFormatStyle: PersonNameFormatStyle { .init() }\n}\n')),(0,r.kt)("p",null,"\u4f7f\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'struct ContentView: View {\n    @State var person = Person()\n    var body: some View {\n    TextField("\u8bf7\u8f93\u5165\u59d3\u540d", value: $person, format: .personNameFormatStyle, prompt: nil)\n        Text("firstName:\\(person.firstName) lastName:\\(person.lastName)")\n    }\n}       \n')),(0,r.kt)("h4",{id:"creating-a-text-field-with-an-arbitrary-optional"},"Creating a Text Field with an Arbitrary Optional"),(0,r.kt)("p",null,"\u548c\u4e0a\u9762\u7684\u7c7b\u4f3c\uff0c\u53ea\u662f\u652f\u6301Optional"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init<F>(_ titleKey: LocalizedStringKey, value: Binding<F.FormatInput?>, format: F, prompt: Text? = nil) where F : ParseableFormatStyle, F.FormatOutput == String\n....\u7701\u7565\n")),(0,r.kt)("h4",{id:"styling-text-fields"},"Styling Text Fields"),(0,r.kt)("p",null,"\u8bbe\u7f6etext field\u7684style"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func textFieldStyle<S>(_ style: S) -> some View where S : TextFieldStyle\n")),(0,r.kt)("p",null,"\u4e3e\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'TextField("\u8bf7\u8f93\u5165\u59d3\u540d", value: $person, format: .personNameFormatStyle, prompt: nil)\n.textFieldStyle(.roundedBorder)\n')),(0,r.kt)("h4",{id:"\u5e38\u7528\u7684uitextfielddelegate\u5bf9\u6bd4"},"\u5e38\u7528\u7684UITextFieldDelegate\u5bf9\u6bd4"),(0,r.kt)("p",null,".editingChanged"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'TextField("", text: $password)\n   .onChange(of: password) { newValue in\n        password = Format(password)\n   }\n')),(0,r.kt)("p",null,".editingDidBegin / .editingDidEnd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'@FocusState var isFocused: Bool\nTextField("", text: $password)\n    .focused($isFocused)                \n    .onChange(of: isFocused) { newValue in\n       print("current foucus state \\(newValue)")\n    }\n')),(0,r.kt)("p",null,"textShouldReturn"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'TextField("", text: $password)\n   .onSubmit {\n       print("clicked return btn")\n   }\n')),(0,r.kt)("h3",{id:"securefield"},"SecureField"),(0,r.kt)("p",null,"\u53ea\u80fdbinding\u5230string\uff0c\u4e0d\u80fd\u50cfTextField\u4e00\u6837\u53ef\u4ee5\u7ed1\u5b9a\u4efb\u4f55\u503c\u3002"),(0,r.kt)("p",null,"\u6ca1\u6709\u663e\u793a\u771f\u5b9e\u8f93\u5165\u5bc6\u7801\u7684\u529f\u80fd\u3002\u8981\u5b9e\u73b0\u773c\u775b\u529f\u80fd\uff0c\u53ea\u6709\u7528TextField\u548cSecureField\u4e00\u8d77\u3002"),(0,r.kt)("h4",{id:"creating-a-secure-text-field"},"Creating a Secure Text Field"),(0,r.kt)("p",null,"\u548ctexfiled\u7c7b\u4f3c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init<S>(_ title: S, text: Binding<String>, prompt: Text?) where S : StringProtocol\n")),(0,r.kt)("h4",{id:"configuring-text-entry"},"Configuring Text Entry"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func keyboardType(_ type: UIKeyboardType) -> some View //\u952e\u76d8\u7c7b\u578b\nfunc disableAutocorrection(_ disable: Bool?) -> some View //\u81ea\u52a8\u4fee\u6b63\nfunc textInputAutocapitalization(_ autocapitalization: TextInputAutocapitalization?) -> some View //\u81ea\u52a8\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\n//\u8bbe\u7f6e\u6587\u672c\u7c7b\u578b\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u7c7b\u578b\u4e3a\u8f93\u5165\u63d0\u4f9b\u5efa\u8bae\nfunc textContentType(_ textContentType: UITextContentType?) -> some View\n")),(0,r.kt)("h3",{id:"texteditor"},"TextEditor"),(0,r.kt)("p",null,"\u663e\u793a\u548c\u7f16\u8f91\u591a\u884c\u8f83\u957f\u7684\u6587\u672c"),(0,r.kt)("h4",{id:"creating-a-text-editor"},"Creating a Text Editor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"init(text: Binding<String>)\n")),(0,r.kt)("h4",{id:"styling-the-views-text-1"},"Styling the View\u2019s Text"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func font(_ font: Font?) -> some View\nfunc foregroundColor(_ color: Color?) -> some View\nfunc multilineTextAlignment(_ alignment: TextAlignment) -> some View\nfunc lineSpacing(_ lineSpacing: CGFloat) -> some View\nfunc allowsTightening(_ flag: Bool) -> some View\n")),(0,r.kt)("h4",{id:"managing-text-entry"},"Managing Text Entry"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"func textInputAutocapitalization(_ autocapitalization: TextInputAutocapitalization?) -> some View\nfunc disableAutocorrection(_ disable: Bool?) -> some View\nfunc keyboardType(_ type: UIKeyboardType) -> some View\n")))}c.isMDXComponent=!0},654:function(e,t,n){t.Z=n.p+"assets/images/Header-9d884eae5d622cf59224d08c514fc798.png"}}]);